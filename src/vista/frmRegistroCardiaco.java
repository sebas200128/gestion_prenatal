/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controller.ControladorPaciente;
import controller.ControladorSignosVitales;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class frmRegistroCardiaco extends javax.swing.JFrame {

    /**
     * Creates new form frmRegistroCardiaco
     */
    public frmRegistroCardiaco() {
        initComponents();
        setTitle("Registrar Cardiaco");
        this.setLocationRelativeTo(null);
        this.setSize(600, 600);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtAltura = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtFrecuenciaCardiaca = new javax.swing.JTextField();
        txtObservaciones = new javax.swing.JTextField();
        txtPresionArterial = new javax.swing.JTextField();
        txtHora = new javax.swing.JTextField();
        txtPeso = new javax.swing.JTextField();
        txtSaturacion = new javax.swing.JTextField();
        btnVolver = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        txtTemperatura = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("ID:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 37, -1));
        getContentPane().add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 71, 30));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/lupa.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 50, 40));

        jLabel2.setText("Fecha:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, -1));

        jLabel3.setText("Hora:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, -1, -1));

        jLabel4.setText("Presion Arterial:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 340, -1, -1));

        jLabel5.setText("Frecuencia Cardiaca:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        jLabel6.setText("Temperatura");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, -1, -1));

        jLabel7.setText("Saturacion Oxigeno");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        jLabel8.setText("Peso");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 270, -1, -1));

        jLabel9.setText("Altura");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        jLabel10.setText("Observaciones");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, -1, -1));
        getContentPane().add(txtAltura, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 150, 40));

        txtFecha.setBorder(javax.swing.BorderFactory.createTitledBorder("yyyy-MM-dd"));
        getContentPane().add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 150, 50));
        getContentPane().add(txtFrecuenciaCardiaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 150, 40));
        getContentPane().add(txtObservaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, 400, 40));
        getContentPane().add(txtPresionArterial, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 330, 150, 40));

        txtHora.setBorder(javax.swing.BorderFactory.createTitledBorder("HH:mm:ss"));
        getContentPane().add(txtHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 150, 50));
        getContentPane().add(txtPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 150, 40));
        getContentPane().add(txtSaturacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 150, 40));

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 490, -1, 50));

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 490, -1, 50));
        getContentPane().add(txtTemperatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 150, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        try {
            int pacienteId = Integer.parseInt(txtId.getText().trim()); // ID del paciente
            String fecha = txtFecha.getText().trim();                  // Formato: yyyy-MM-dd
            String hora = txtHora.getText().trim();                    // Formato: HH:mm:ss
            String presionArterial = txtPresionArterial.getText().trim();
            int frecuenciaCardiaca = Integer.parseInt(txtFrecuenciaCardiaca.getText().trim());
            double temperatura = Double.parseDouble(txtTemperatura.getText().trim());
            int saturacionOxigeno = Integer.parseInt(txtSaturacion.getText().trim());
            double peso = Double.parseDouble(txtPeso.getText().trim());
            double altura = Double.parseDouble(txtAltura.getText().trim());
            String observaciones = txtObservaciones.getText().trim();

            // Si deseas incluir la frecuencia respiratoria, necesitarías agregar ese campo
            // Aquí suponemos que no lo tienes aún
            int frecuenciaRespiratoria = 0; // Por defecto, o crear otro txtFrecuenciaRespiratoria si lo agregas

            ControladorSignosVitales controlador = new ControladorSignosVitales();
            boolean exito = controlador.registrarSignosVitales(
                    pacienteId, fecha, hora, presionArterial,
                    frecuenciaCardiaca, frecuenciaRespiratoria,
                    temperatura, saturacionOxigeno, peso, altura, observaciones
            );

            if (exito) {
                JOptionPane.showMessageDialog(this, "Signos vitales registrados correctamente.");
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Error al registrar signos vitales.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Verifica los campos numéricos. Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        frmDetallePacientes detallesp = new frmDetallePacientes();
        detallesp.setLocationRelativeTo(null);
        detallesp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        try {
            String idTexto = txtId.getText().trim();

            if (idTexto.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "⚠️ Por favor ingrese un ID de paciente",
                        "Campo vacío",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }

            int pacienteId;
            try {
                pacienteId = Integer.parseInt(idTexto);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,
                        "❌ El ID debe ser un número válido",
                        "Error de formato",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            ControladorPaciente controlador = new ControladorPaciente();

            // Opción 1: Usando existePaciente()
            if (!controlador.existePaciente(pacienteId)) {
                JOptionPane.showMessageDialog(this,
                        "❌ No existe paciente con ID: " + pacienteId,
                        "Paciente no encontrado",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Opción 2: Alternativa sin usar existePaciente()
            String nombrePaciente = controlador.obtenerNombrePaciente(pacienteId);
            if (nombrePaciente == null) {
                JOptionPane.showMessageDialog(this,
                        "❌ No se encontró paciente con ID: " + pacienteId,
                        "Paciente no encontrado",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            JOptionPane.showMessageDialog(this,
                    "✅ Paciente encontrado: " + nombrePaciente,
                    "Búsqueda exitosa",
                    JOptionPane.INFORMATION_MESSAGE);

            // Habilitar campos para registro
            habilitarCamposRegistro(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "⚠️ Error inesperado: " + e.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void limpiarCampos() {
        txtId.setText("");
        txtFecha.setText("");
        txtHora.setText("");
        txtPresionArterial.setText("");
        txtFrecuenciaCardiaca.setText("");
        txtTemperatura.setText("");
        txtSaturacion.setText("");
        txtPeso.setText("");
        txtAltura.setText("");
        txtObservaciones.setText("");
    }

    private void habilitarCamposRegistro(boolean habilitar) {
        txtFecha.setEnabled(habilitar);
        txtHora.setEnabled(habilitar);
        txtFrecuenciaCardiaca.setEnabled(habilitar);
        txtTemperatura.setEnabled(habilitar);
        txtSaturacion.setEnabled(habilitar);
        txtPeso.setEnabled(habilitar);
        txtAltura.setEnabled(habilitar);
        txtPresionArterial.setEnabled(habilitar);
        txtObservaciones.setEnabled(habilitar);
        btnRegistrar.setEnabled(habilitar);
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(frmRegistroCardiaco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(frmRegistroCardiaco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(frmRegistroCardiaco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(frmRegistroCardiaco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new frmRegistroCardiaco().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAltura;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtFrecuenciaCardiaca;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtObservaciones;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtPresionArterial;
    private javax.swing.JTextField txtSaturacion;
    private javax.swing.JTextField txtTemperatura;
    // End of variables declaration//GEN-END:variables
}
